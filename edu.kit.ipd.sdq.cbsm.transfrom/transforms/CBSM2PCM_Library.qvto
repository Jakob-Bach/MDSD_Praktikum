library CBSM2PCM_Library;

modeltype CBSM "strict" uses "http://sdq.ipd.kit.edu/componentBasedSystemModel";
modeltype PCM "strict" uses "http://palladiosimulator.org/PalladioComponentModel/5.1";

------------------------
----------core----------
------------------------

abstract mapping CBSM::core::NamedElement::NamedElement2NamedElement() :
		PCM::core::entity::NamedElement
{
	entityName := self.name;
}

------------------------------
----------repository----------
------------------------------

mapping CBSM::repository::Repository::Repository2Repository() :
		PCM::repository::Repository
{
	components__Repository := self.components -> map Component2RepositoryComponent();
	interfaces__Repository := self.interfaces -> map Interface2OperationInterface();
	dataTypes__Repository := self.dataTypes -> map DataType2DataType();
}

mapping CBSM::repository::Interface::Interface2OperationInterface() :
		PCM::repository::OperationInterface
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	signatures__OperationInterface := self.signatures ->
		map Signature2OperationSignature();
}

abstract mapping CBSM::repository::Role::Role2Role() :
		PCM::repository::Role
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{

}

mapping CBSM::repository::ProvidedRole::ProvidedRole2OperationProvidedRole() :
		PCM::repository::OperationProvidedRole
inherits CBSM::repository::Role::Role2Role
{
	providedInterface__OperationProvidedRole := self.providedInterface.
		resolveone(PCM::repository::OperationInterface);
}

mapping CBSM::repository::RequiredRole::RequiredRole2OperationRequiredRole() :
		PCM::repository::OperationRequiredRole
inherits CBSM::repository::Role::Role2Role
{
	requiredInterface__OperationRequiredRole := self.requiredInterface.
		resolveone(PCM::repository::OperationInterface);
}

abstract mapping CBSM::repository::ProvidingAndRequiringElement::
			ProvidingAndRequiringElement2InterfaceProvidingRequiringEntity() :
		PCM::core::entity::InterfaceProvidingRequiringEntity
{
	providedRoles_InterfaceProvidingEntity := self.providedRoles ->
		map ProvidedRole2OperationProvidedRole();
	requiredRoles_InterfaceRequiringEntity := self.requiredRoles ->
		map RequiredRole2OperationRequiredRole();
}

mapping CBSM::repository::Component::Component2RepositoryComponent() :
		PCM::repository::RepositoryComponent
disjuncts CBSM::assembly::CompositeComponent::CompositeComponent2CompositeComponent,
		CBSM::repository::Component::Component2BasicComponent
{
	-- delegate to sub-types
}

abstract mapping CBSM::repository::Component::Component2RepositoryComponent_abstract() :
		PCM::repository::RepositoryComponent
inherits CBSM::core::NamedElement::NamedElement2NamedElement,
		CBSM::repository::ProvidingAndRequiringElement::
				ProvidingAndRequiringElement2InterfaceProvidingRequiringEntity
{

}

mapping CBSM::repository::Component::Component2BasicComponent() :
		PCM::repository::BasicComponent
inherits CBSM::repository::Component::Component2RepositoryComponent_abstract
{
	serviceEffectSpecifications__BasicComponent := self.behaviorDescription ->
		map BehaviorDescription2ResourceDemandingSEFF();
	--TODO Palladio supports multiple SEFFs per Component, we support only one BehaviorDescription
}

mapping CBSM::repository::Signature::Signature2OperationSignature() :
		PCM::repository::OperationSignature
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	parameters__OperationSignature := self.parameters -> map Parameter2Parameter();
	returnType__OperationSignature := self.returnType.resolveone(PCM::repository::DataType);
}

mapping CBSM::repository::Parameter::Parameter2Parameter() :
		PCM::repository::Parameter
{
	parameterName := self.name;
	dataType__Parameter := self.type.resolveone(PCM::repository::DataType);
}

mapping CBSM::repository::DataType::DataType2DataType() :
		PCM::repository::DataType
disjuncts CBSM::repository::ComplexType::ComplexType2CompositeDataType,
		CBSM::repository::SimpleType::SimpleType2PrimitiveDataType
{
	-- delegate to sub-types
}

mapping CBSM::repository::ComplexType::ComplexType2CompositeDataType() :
		PCM::repository::CompositeDataType
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	-- there is no ComplexDataType in PCM, but Composite- and CollectionDataType;
	-- we chose CompositeDataType here
}

mapping CBSM::repository::SimpleType::SimpleType2PrimitiveDataType() :
		PCM::repository::PrimitiveDataType
{
	type := if(self.typeInstance = CBSM::repository::SimpleTypeInstance::Boolean) then
				PCM::repository::PrimitiveTypeEnum::BOOL
			elif (self.typeInstance = CBSM::repository::SimpleTypeInstance::Char) then
				PCM::repository::PrimitiveTypeEnum::CHAR
			elif (self.typeInstance = CBSM::repository::SimpleTypeInstance::Double) then
				PCM::repository::PrimitiveTypeEnum::DOUBLE
			elif (self.typeInstance = CBSM::repository::SimpleTypeInstance::Float) then
				-- no direct equivalent in PCM, therefore cast
				PCM::repository::PrimitiveTypeEnum::DOUBLE
			elif (self.typeInstance = CBSM::repository::SimpleTypeInstance::Int) then
				PCM::repository::PrimitiveTypeEnum::INT
			elif (self.typeInstance = CBSM::repository::SimpleTypeInstance::Long) then
				PCM::repository::PrimitiveTypeEnum::LONG
			else -- includes Map, List, Date which have no equivalent and String
				PCM::repository::PrimitiveTypeEnum::STRING
			endif;
}

----------------------------
----------behavior----------
----------------------------

mapping CBSM::repository::behavior::BehaviorDescription::BehaviorDescription2ResourceDemandingSEFF() :
		PCM::seff::ResourceDemandingSEFF
{
	steps_Behaviour := self.actions -> map Action2AbstractAction();
}

abstract mapping CBSM::repository::behavior::Action::Action2AbstractAction() :
		PCM::seff::AbstractAction
disjuncts CBSM::repository::behavior::InternalAction::InternalAction2InternalCallAction,
		CBSM::repository::behavior::ExternalCall::ExternalCall2ExternalCallAction,
		CBSM::repository::behavior::Loop::Loop2LoopAction,
		CBSM::repository::behavior::Branch::Branch2BranchAction
{
	-- delegate to sub-types
}

abstract mapping CBSM::repository::behavior::Action::Action2AbstractAction_abstract() :
		PCM::seff::AbstractAction
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	predecessor_AbstractAction := self.predecessor.resolveone(PCM::seff::AbstractAction);
	successor_AbstractAction := self.successor.resolveone(PCM::seff::AbstractAction);
}

mapping CBSM::repository::behavior::InternalAction::InternalAction2InternalCallAction() :
		PCM::seff::InternalCallAction
inherits CBSM::repository::behavior::Action::Action2AbstractAction_abstract
{

}

mapping CBSM::repository::behavior::ExternalCall::ExternalCall2ExternalCallAction() :
		PCM::seff::ExternalCallAction
inherits CBSM::repository::behavior::Action::Action2AbstractAction_abstract
{
	calledService_ExternalService := self.requiredService.
		resolveone(PCM::repository::OperationSignature);
	role_ExternalService := self.requiredRoleOfService.
		resolveone(PCM::repository::OperationRequiredRole);
}

mapping CBSM::repository::behavior::Loop::Loop2LoopAction() :
		PCM::seff::LoopAction
inherits CBSM::repository::behavior::Action::Action2AbstractAction_abstract
{
	--TODO references ResourceDemandingBehavior instead of actions in Palladio
}

mapping CBSM::repository::behavior::Branch::Branch2BranchAction() :
		PCM::seff::BranchAction
inherits CBSM::repository::behavior::Action::Action2AbstractAction_abstract
{
	branches_Branch := self.branchPaths -> map BranchPath2ProbabilisticBranchTransition();
}

mapping CBSM::repository::behavior::BranchPath::BranchPath2ProbabilisticBranchTransition() :
		PCM::seff::ProbabilisticBranchTransition
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	--TODO references  ResourceDemandingBehavior instead of actions in Palladio
}

----------------------------
----------assembly----------
----------------------------

mapping CBSM::assembly::AssemblyContext::AssemblyContext2AssemblyContext() :
		PCM::core::composition::AssemblyContext
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	parentStructure__AssemblyContext := self.parentCompositeElement.
		resolveone(pcm::core::composition::ComposedStructure);
	encapsulatedComponent__AssemblyContext := self.instantiatedComponent.
		resolveone(pcm::repository::RepositoryComponent);
}

abstract mapping CBSM::assembly::CompositeProvidingAndRequiringElement::
			CompositeProvidingAndRequiringElement2ComposedProvidingRequiringEntity() :
		PCM::core::entity::ComposedProvidingRequiringEntity
inherits CBSM::repository::ProvidingAndRequiringElement::
		ProvidingAndRequiringElement2InterfaceProvidingRequiringEntity
{
	assemblyContexts__ComposedStructure := self.containedAssemblyContexts ->
		map AssemblyContext2AssemblyContext();
}

mapping CBSM::assembly::CompositeComponent::CompositeComponent2CompositeComponent() :
		PCM::repository::CompositeComponent
inherits CBSM::repository::Component::Component2RepositoryComponent_abstract
{

}

mapping CBSM::assembly::System::System2System() :
		PCM::system::System
inherits CBSM::assembly::CompositeProvidingAndRequiringElement::
		CompositeProvidingAndRequiringElement2ComposedProvidingRequiringEntity
{
	connectors__ComposedStructure := self.systemConnectors -> map Connector2Connector();
}

mapping CBSM::assembly::Connector::Connector2Connector() :
		PCM::core::composition::Connector
disjuncts CBSM::assembly::ProvidedDelegationConnector::
			ProvidedDelegationConnector2ProvidedDelegationConnector,
		CBSM::assembly::RequiredDelegationConnector::
			RequiredDelegationConnector2RequiredDelegationConnector,
		CBSM::assembly::AssemblyConnector::AssemblyConnector2AssemblyConnector
{
	-- delegate to sub-types
}

abstract mapping CBSM::assembly::Connector::Connector2Connector_abstract() :
		PCM::core::composition::Connector
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{

}

abstract mapping CBSM::assembly::DelegationConnector::DelegationConnector2DelegationConnector() :
		PCM::core::composition::DelegationConnector
inherits CBSM::assembly::Connector::Connector2Connector_abstract
{

}

mapping CBSM::assembly::ProvidedDelegationConnector::
			ProvidedDelegationConnector2ProvidedDelegationConnector() :
		PCM::core::composition::ProvidedDelegationConnector
inherits CBSM::assembly::DelegationConnector::DelegationConnector2DelegationConnector
{
	innerProvidedRole_ProvidedDelegationConnector := self.innerProvidedRole.
		resolveone(PCM::repository::OperationProvidedRole);
	outerProvidedRole_ProvidedDelegationConnector := self.outerProvidedRole.
		resolveone(PCM::repository::OperationProvidedRole);
}

mapping CBSM::assembly::RequiredDelegationConnector::
			RequiredDelegationConnector2RequiredDelegationConnector() :
		PCM::core::composition::RequiredDelegationConnector
inherits CBSM::assembly::DelegationConnector::DelegationConnector2DelegationConnector
{
	innerRequiredRole_RequiredDelegationConnector := self.innerRequiredRole.
		resolveone(PCM::repository::OperationRequiredRole);
	outerRequiredRole_RequiredDelegationConnector := self.outerRequiredRole.
		resolveone(PCM::repository::OperationRequiredRole);
}

mapping CBSM::assembly::AssemblyConnector::AssemblyConnector2AssemblyConnector() :
		PCM::core::composition::AssemblyConnector
inherits CBSM::assembly::Connector::Connector2Connector_abstract
{
	requiringAssemblyContext_AssemblyConnector := self.connectedRequiredAssemblyContext.
		resolveone(pcm::core::composition::AssemblyContext);
	providingAssemblyContext_AssemblyConnector := self.connectedProvidedAssemblyContext.
		resolveone(pcm::core::composition::AssemblyContext);
	providedRole_AssemblyConnector := self.connectedProvidedRole.
		resolveone(PCM::repository::OperationProvidedRole);
	requiredRole_AssemblyConnector := self.connectedRequiredRole.
		resolveone(PCM::repository::OperationRequiredRole);
}

-------------------------------
----------environment----------
-------------------------------

mapping CBSM::environment::Environment::Environment2ResourceEnvironment() :
		PCM::resourceenvironment::ResourceEnvironment
{
	linkingResources__ResourceEnvironment := self.links -> map Link2LinkingResource();
	resourceContainer_ResourceEnvironment := self.containers -> map Container2ResourceContainer();
}

mapping CBSM::environment::Container::Container2ResourceContainer() :
		PCM::resourceenvironment::ResourceContainer
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	resourceEnvironment_ResourceContainer := self.parentEnvironment.
		resolveone(PCM::resourceenvironment::ResourceEnvironment);
}

mapping CBSM::environment::Link::Link2LinkingResource() :
		PCM::resourceenvironment::LinkingResource
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	resourceEnvironment_LinkingResource := self.parentEnvironment.
		resolveone(PCM::resourceenvironment::ResourceEnvironment);
	connectedResourceContainers_LinkingResource := self.linkedContainers.
		resolveone(PCM::resourceenvironment::ResourceContainer);
}

------------------------------
----------allocation----------
------------------------------

mapping CBSM::allocation::Allocation::Allocation2Allocation() :
		PCM::allocation::Allocation
{
	allocationContexts_Allocation := self.allocationContexts ->
		map AllocationContext2AllocationContext();
}

mapping CBSM::allocation::AllocationContext::AllocationContext2AllocationContext() :
		PCM::allocation::AllocationContext
inherits CBSM::core::NamedElement::NamedElement2NamedElement
{
	assemblyContext_AllocationContext := self.allocatedAssemblyContext.
		resolveone(PCM::core::composition::AssemblyContext);
	resourceContainer_AllocationContext := self.allocatedContainer.
		resolveone(PCM::resourceenvironment::ResourceContainer);
}
